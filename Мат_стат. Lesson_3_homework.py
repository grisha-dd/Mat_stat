#!/usr/bin/env python
# coding: utf-8

# 1. Даны значения зарплат из выборки выпускников: 100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150. Посчитать (желательно без использования статистических методов наподобие std, var, mean) среднее арифметическое, среднее квадратичное отклонение, смещенную и несмещенную оценки дисперсий для данной выборки.
# 

# In[10]:


import numpy as np
salaries = [100, 80, 75, 77, 89, 33, 45, 25, 65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150]
salaries_mean = sum(salaries)/len(salaries)
print (f"среднее арифметическое: {salaries_mean} ")
print (f"check: {np.mean(salaries)} ")


# In[20]:


print (f"среднее квадратичное отклонение выборки: {np.sqrt(sum((i-salaries_mean)**2 for i in salaries)/(len(salaries)-1))} ")
print (f"check: {np.std(salaries, ddof=1)} ")


# In[21]:


print (f"смещенная оценка дисперсии: {(sum((i-salaries_mean)**2 for i in salaries)/(len(salaries)))} ")
print (f"check: {np.var(salaries, ddof=0)} ")


# In[22]:


print (f"несмещенная оценка дисперсии: {(sum((i-salaries_mean)**2 for i in salaries)/(len(salaries)-1))} ")
print (f"check: {np.var(salaries, ddof=1)} ")


# 2. В первом ящике находится 8 мячей, из которых 5 - белые. Во втором ящике - 12 мячей, из которых 5 белых. Из первого ящика вытаскивают случайным образом два мяча, из второго - 4. Какова вероятность того, что 3 мяча белые?
# 

# In[24]:


from math import factorial
def combinations(n, k):
    C = int(factorial(n) / (factorial(k) * factorial(n - k)))
    return C


# In[28]:


t1 = 8
w1 = 5
t2 = 12
w2 = 5 

r1 = 2
r2 = 4


# In[48]:


P1 = combinations(w1, 2) / combinations(t1, r1) * (combinations(w2, 1) * combinations(t2 - w2, 3))/combinations(t2, r2)
print(f"Вероятность вытащить 2 белых мяча из 1 ящика и 1 из 2 ящика: {P1} ")


# In[49]:


P2 = combinations(w1, 1) * combinations(t1 - w1, 1)/ combinations(t1, r1) * (combinations(w2, 2) * combinations(t2 - w2, 2))/combinations(t2, r2)
print(f"Вероятность вытащить 1 белый мяч из 1 ящика и 2 из 2 ящика: {P2} ")


# In[44]:


P3 = combinations((t1 - w1), 2)/combinations(t1, r1) * (combinations(w2, 3) * combinations(t2 - w2, 1))/combinations(t2, r2)
print(f"Вероятность вытащить 0 белых мяча из 1 ящика и 3 из 2 ящика: {P3} ")


# In[50]:


print(f"Вероятность вытащить 3 белых мяча: {P1 + P2 + P3} ")


# 3. На соревновании по биатлону один из трех спортсменов стреляет и попадает в мишень. Вероятность попадания для первого спортсмена равна 0.9, для второго — 0.8, для третьего — 0.6. Найти вероятность того, что выстрел произведен: a). первым спортсменом б). вторым спортсменом в). третьим спортсменом.
# 

# In[55]:


s1 = 0.9
s2 = 0.8
s3 = 0.6

p = 1/3


# In[56]:


p_total = p * s1 + p * s2  + p * s3
print(f" Полная вероятность: {p_total} ")


# По формуле Байеса:

# In[57]:


def bayes (p1, p2, total):
    return p1 * p2 / total


# In[59]:


print(f"Вероятность того, что выстрел произведен первым спортсменом: {bayes(p, s1, p_total)} ")


# In[60]:


print(f"Вероятность того, что выстрел произведен вторым спортсменом: {bayes(p, s2, p_total)} ")


# In[61]:


print(f"Вероятность того, что выстрел произведен третьим спортсменом: {bayes(p, s3, p_total)} ")


# 4. В университет на факультеты A и B поступило равное количество студентов, а на факультет C студентов поступило столько же, сколько на A и B вместе. Вероятность того, что студент факультета A сдаст первую сессию, равна 0.8. Для студента факультета B эта вероятность равна 0.7, а для студента факультета C - 0.9. Студент сдал первую сессию. Какова вероятность, что он учится: a). на факультете A б). на факультете B в). на факультете C?
# 

# In[72]:


sA = 0.8
sB = 0.7
sC = 0.9 

pA = pB = 0.25
pC = 0.5


# In[73]:


p_total = pA * sA + sB * pB  + sC * pC
print(f" Полная вероятность: {p_total} ")


# Аналогично по формуле Байеса:

# In[74]:


print(f"Вероятность того, что сессию сдал студент с факультета А: {bayes(pA, sA, p_total)} ")


# In[75]:


print(f"Вероятность того, что сессию сдал студент с факультета B: {bayes(pB, sB, p_total)} ")


# In[76]:


print(f"Вероятность того, что сессию сдал студент с факультета C: {bayes(pC, sC, p_total)} ")


# 5. Устройство состоит из трех деталей. Для первой детали вероятность выйти из строя в первый месяц равна 0.1, для второй - 0.2, для третьей - 0.25. Какова вероятность того, что в первый месяц выйдут из строя: а). все детали б). только две детали в). хотя бы одна деталь г). от одной до двух деталей?

# In[78]:


d1 = 0.1
d2 = 0.2
d3 = 0.25


# In[86]:


a = d1 * d2 * d3
print(f"Вероятность того, что в первый месяц выйдут из строя все детали: {a}")


# In[87]:


b = d1 * d2 * (1-d3) + d1 * (1 - d2) * d3 + (1 - d1) * d2 * d3
print(f"Вероятность того, что в первый месяц выйдут из строя только две детали: {b}")


# In[88]:


c = 1 - ((1-d1) * (1 - d2) * (1 - d3))
print(f"Вероятность того, что в первый месяц выйдут из строя хотя бы одна деталь: {c}")


# In[89]:


d = c - a
print(f"Вероятность того, что в первый месяц выйдут из строя от одной до двух деталей: {d}")

